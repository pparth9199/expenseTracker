{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=color;var _reactNative=require(\"react-native\");var _base=require(\"../base\");var _AnimatedNode=_interopRequireDefault(require(\"../core/AnimatedNode\"));var procColor=(0,_base.proc)(function(r,g,b,a){var color=(0,_base.add)((0,_base.multiply)(a,1<<24),(0,_base.multiply)((0,_base.round)(r),1<<16),(0,_base.multiply)((0,_base.round)(g),1<<8),(0,_base.round)(b));if(_reactNative.Platform.OS==='android'){return(0,_base.cond)((0,_base.lessThan)(color,1<<31>>>0),color,(0,_base.sub)(color,Math.pow(2,32)));}return color;});function color(r,g,b){var a=arguments.length>3&&arguments[3]!==undefined?arguments[3]:1;if(_reactNative.Platform.OS==='web'){return(0,_base.concat)('rgba(',r,',',g,',',b,',',a,')');}if(a instanceof _AnimatedNode.default){a=(0,_base.round)((0,_base.multiply)(a,255));}else{a=Math.round(a*255);}return procColor(r,g,b,a);}","map":{"version":3,"sources":["color.js"],"names":["procColor","proc","color","add","multiply","round","Platform","cond","lessThan","sub","Math","a","concat"],"mappings":"kKAAA,yCAEA,6BACA,0EAEA,GAAMA,CAAAA,SAAS,CAAGC,eAAK,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAqB,CAC1C,GAAMC,CAAAA,KAAK,CAAGC,cACZC,mBAAQ,CAARA,CAAY,GADG,EACfA,CADYD,CAEZC,mBAASC,gBAAD,CAACA,CAATD,CAAmB,GAFJ,EAEfA,CAFYD,CAGZC,mBAASC,gBAAD,CAACA,CAATD,CAAmB,GAHJ,CAGfA,CAHYD,CAIZE,gBAJF,CAIEA,CAJYF,CAAd,CAOA,GAAIG,sBAAAA,EAAAA,GAAJ,SAAA,CAA+B,CAE7B,MAAOC,eACLC,mBAAQ,KAARA,CAAiB,GAAD,EAAC,GADR,CACTA,CADKD,CAAI,KAAJA,CAGLE,cAAG,KAAHA,CAAWC,IAAI,CAAJA,GAAAA,CAAAA,CAAAA,CAHb,EAGaA,CAAXD,CAHKF,CAAP,CAKD,CACD,MAAA,CAAA,KAAA,CAhBF,CAAkBN,CAAlB,CAmBe,QAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAA+B,IAAPU,CAAAA,CAAO,2DAA/B,CAA+B,CAC5C,GAAIL,sBAAAA,EAAAA,GAAJ,KAAA,CAA2B,CAEzB,MAAOM,iBAAM,OAANA,CAAM,CAANA,CAAM,GAANA,CAAM,CAANA,CAAM,GAANA,CAAM,CAANA,CAAM,GAANA,CAAM,CAANA,CAAP,GAAOA,CAAP,CACD,CAED,GAAID,CAAC,WAAL,sBAAA,CAA+B,CAC7BA,CAAC,CAAGN,gBAAMD,mBAAQ,CAARA,CAAVO,GAAUP,CAANC,CAAJM,CADF,CAAA,IAEO,CACLA,CAAC,CAAGD,IAAI,CAAJA,KAAAA,CAAWC,CAAC,CAAhBA,GAAID,CAAJC,CACD,CAED,MAAOX,CAAAA,SAAS,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAhB,CAAgB,CAAhB,CACD","sourcesContent":["import { Platform } from 'react-native';\n\nimport { add, cond, concat, lessThan, multiply, round, sub, proc } from '../base';\nimport AnimatedNode from '../core/AnimatedNode';\n\nconst procColor = proc(function(r, g, b, a) {\n  const color = add(\n    multiply(a, 1 << 24),\n    multiply(round(r), 1 << 16),\n    multiply(round(g), 1 << 8),\n    round(b)\n  );\n  \n  if (Platform.OS === 'android') {\n    // on Android color is represented as signed 32 bit int\n    return cond(\n      lessThan(color, (1 << 31) >>> 0),\n      color,\n      sub(color, Math.pow(2, 32))\n    );\n  }\n  return color;\n});\n\nexport default function color(r, g, b, a = 1) {\n  if (Platform.OS === 'web') {\n    // doesn't support bit shifting\n    return concat('rgba(', r, ',', g, ',', b, ',', a, ')');\n  }\n\n  if (a instanceof AnimatedNode) {\n    a = round(multiply(a, 255));\n  } else {\n    a = Math.round(a * 255);\n  }\n\n  return procColor(r, g, b, a);\n}\n"]},"metadata":{},"sourceType":"script"}