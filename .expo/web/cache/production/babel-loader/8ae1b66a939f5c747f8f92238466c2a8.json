{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _base=require(\"../base\");var _InternalAnimatedValue=_interopRequireDefault(require(\"../core/InternalAnimatedValue\"));var MAX_STEPS_MS=64;function spring(clock,state,config){var lastTime=(0,_base.cond)(state.time,state.time,clock);var deltaTime=(0,_base.min)((0,_base.sub)(clock,lastTime),MAX_STEPS_MS);var c=config.damping;var m=config.mass;var k=config.stiffness;var v0=(0,_base.multiply)(-1,state.velocity);var x0=(0,_base.sub)(config.toValue,state.position);var zeta=(0,_base.divide)(c,(0,_base.multiply)(2,(0,_base.sqrt)((0,_base.multiply)(k,m))));var omega0=(0,_base.sqrt)((0,_base.divide)(k,m));var omega1=(0,_base.multiply)(omega0,(0,_base.sqrt)((0,_base.sub)(1,(0,_base.multiply)(zeta,zeta))));var t=(0,_base.divide)(deltaTime,1000);var sin1=(0,_base.sin)((0,_base.multiply)(omega1,t));var cos1=(0,_base.cos)((0,_base.multiply)(omega1,t));var underDampedEnvelope=(0,_base.exp)((0,_base.multiply)(-1,zeta,omega0,t));var underDampedFrag1=(0,_base.multiply)(underDampedEnvelope,(0,_base.add)((0,_base.multiply)(sin1,(0,_base.divide)((0,_base.add)(v0,(0,_base.multiply)(zeta,omega0,x0)),omega1)),(0,_base.multiply)(x0,cos1)));var underDampedPosition=(0,_base.sub)(config.toValue,underDampedFrag1);var underDampedVelocity=(0,_base.sub)((0,_base.multiply)(zeta,omega0,underDampedFrag1),(0,_base.multiply)(underDampedEnvelope,(0,_base.sub)((0,_base.multiply)(cos1,(0,_base.add)(v0,(0,_base.multiply)(zeta,omega0,x0))),(0,_base.multiply)(omega1,x0,sin1))));var criticallyDampedEnvelope=(0,_base.exp)((0,_base.multiply)(-1,omega0,t));var criticallyDampedPosition=(0,_base.sub)(config.toValue,(0,_base.multiply)(criticallyDampedEnvelope,(0,_base.add)(x0,(0,_base.multiply)((0,_base.add)(v0,(0,_base.multiply)(omega0,x0)),t))));var criticallyDampedVelocity=(0,_base.multiply)(criticallyDampedEnvelope,(0,_base.add)((0,_base.multiply)(v0,(0,_base.sub)((0,_base.multiply)(t,omega0),1)),(0,_base.multiply)(t,x0,omega0,omega0)));var prevPosition=state.prevPosition?state.prevPosition:new _InternalAnimatedValue.default(0);var isOvershooting=(0,_base.cond)((0,_base.and)(config.overshootClamping,(0,_base.neq)(config.stiffness,0)),(0,_base.cond)((0,_base.lessThan)(prevPosition,config.toValue),(0,_base.greaterThan)(state.position,config.toValue),(0,_base.lessThan)(state.position,config.toValue)));var isVelocity=(0,_base.lessThan)((0,_base.abs)(state.velocity),config.restSpeedThreshold);var isDisplacement=(0,_base.or)((0,_base.eq)(config.stiffness,0),(0,_base.lessThan)((0,_base.abs)((0,_base.sub)(config.toValue,state.position)),config.restDisplacementThreshold));return(0,_base.block)([(0,_base.set)(prevPosition,state.position),(0,_base.cond)((0,_base.lessThan)(zeta,1),[(0,_base.set)(state.position,underDampedPosition),(0,_base.set)(state.velocity,underDampedVelocity)],[(0,_base.set)(state.position,criticallyDampedPosition),(0,_base.set)(state.velocity,criticallyDampedVelocity)]),(0,_base.set)(state.time,clock),(0,_base.cond)((0,_base.or)(isOvershooting,(0,_base.and)(isVelocity,isDisplacement)),[(0,_base.cond)((0,_base.neq)(config.stiffness,0),[(0,_base.set)(state.velocity,0),(0,_base.set)(state.position,config.toValue)]),(0,_base.set)(state.finished,1)])]);}var procSpring=(0,_base.proc)(function(finished,velocity,position,time,prevPosition,toValue,damping,mass,stiffness,overshootClamping,restSpeedThreshold,restDisplacementThreshold,clock){return spring(clock,{finished:finished,velocity:velocity,position:position,time:time,prevPosition:prevPosition},{toValue:toValue,damping:damping,mass:mass,stiffness:stiffness,overshootClamping:overshootClamping,restDisplacementThreshold:restDisplacementThreshold,restSpeedThreshold:restSpeedThreshold});});var _default=function _default(clock,_ref,_ref2){var finished=_ref.finished,velocity=_ref.velocity,position=_ref.position,time=_ref.time,prevPosition=_ref.prevPosition;var toValue=_ref2.toValue,damping=_ref2.damping,mass=_ref2.mass,stiffness=_ref2.stiffness,overshootClamping=_ref2.overshootClamping,restDisplacementThreshold=_ref2.restDisplacementThreshold,restSpeedThreshold=_ref2.restSpeedThreshold;return procSpring(finished,velocity,position,time,prevPosition,toValue,damping,mass,stiffness,overshootClamping,restSpeedThreshold,restDisplacementThreshold,clock);};exports.default=_default;","map":{"version":3,"sources":["spring.js"],"names":["MAX_STEPS_MS","lastTime","cond","state","deltaTime","min","sub","c","config","m","k","v0","multiply","x0","zeta","divide","sqrt","omega0","omega1","t","sin1","sin","cos1","cos","underDampedEnvelope","exp","underDampedFrag1","add","underDampedPosition","underDampedVelocity","criticallyDampedEnvelope","criticallyDampedPosition","criticallyDampedVelocity","prevPosition","isOvershooting","and","neq","lessThan","greaterThan","isVelocity","abs","isDisplacement","or","eq","block","set","procSpring","proc","spring","finished","velocity","position","time","toValue","damping","mass","stiffness","overshootClamping","restDisplacementThreshold","restSpeedThreshold"],"mappings":"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","sourcesContent":["import {\n  cond,\n  sub,\n  divide,\n  multiply,\n  sqrt,\n  add,\n  block,\n  set,\n  exp,\n  sin,\n  cos,\n  eq,\n  or,\n  neq,\n  and,\n  lessThan,\n  greaterThan,\n  proc,\n  min,\n  abs,\n} from '../base';\nimport AnimatedValue from '../core/InternalAnimatedValue';\n\nconst MAX_STEPS_MS = 64;\n\nfunction spring(clock, state, config) {\n  const lastTime = cond(state.time, state.time, clock);\n\n  const deltaTime = min(sub(clock, lastTime), MAX_STEPS_MS);\n\n  const c = config.damping;\n  const m = config.mass;\n  const k = config.stiffness;\n\n  const v0 = multiply(-1, state.velocity);\n  const x0 = sub(config.toValue, state.position);\n\n  const zeta = divide(c, multiply(2, sqrt(multiply(k, m)))); // damping ratio\n  const omega0 = sqrt(divide(k, m)); // undamped angular frequency of the oscillator (rad/ms)\n  const omega1 = multiply(omega0, sqrt(sub(1, multiply(zeta, zeta)))); // exponential decay\n\n  const t = divide(deltaTime, 1000); // in seconds\n\n  const sin1 = sin(multiply(omega1, t));\n  const cos1 = cos(multiply(omega1, t));\n\n  // under damped\n  const underDampedEnvelope = exp(multiply(-1, zeta, omega0, t));\n  const underDampedFrag1 = multiply(\n    underDampedEnvelope,\n    add(\n      multiply(sin1, divide(add(v0, multiply(zeta, omega0, x0)), omega1)),\n      multiply(x0, cos1)\n    )\n  );\n  const underDampedPosition = sub(config.toValue, underDampedFrag1);\n  // This looks crazy -- it's actually just the derivative of the oscillation function\n  const underDampedVelocity = sub(\n    multiply(zeta, omega0, underDampedFrag1),\n    multiply(\n      underDampedEnvelope,\n      sub(\n        multiply(cos1, add(v0, multiply(zeta, omega0, x0))),\n        multiply(omega1, x0, sin1)\n      )\n    )\n  );\n\n  // critically damped\n  const criticallyDampedEnvelope = exp(multiply(-1, omega0, t));\n  const criticallyDampedPosition = sub(\n    config.toValue,\n    multiply(\n      criticallyDampedEnvelope,\n      add(x0, multiply(add(v0, multiply(omega0, x0)), t))\n    )\n  );\n  const criticallyDampedVelocity = multiply(\n    criticallyDampedEnvelope,\n    add(\n      multiply(v0, sub(multiply(t, omega0), 1)),\n      multiply(t, x0, omega0, omega0)\n    )\n  );\n\n  // conditions for stopping the spring animations\n  const prevPosition = state.prevPosition\n    ? state.prevPosition\n    : new AnimatedValue(0);\n\n  const isOvershooting = cond(\n    and(config.overshootClamping, neq(config.stiffness, 0)),\n    cond(\n      lessThan(prevPosition, config.toValue),\n      greaterThan(state.position, config.toValue),\n      lessThan(state.position, config.toValue)\n    )\n  );\n  const isVelocity = lessThan(abs(state.velocity), config.restSpeedThreshold);\n  const isDisplacement = or(\n    eq(config.stiffness, 0),\n    lessThan(\n      abs(sub(config.toValue, state.position)),\n      config.restDisplacementThreshold\n    )\n  );\n\n  return block([\n    set(prevPosition, state.position),\n    cond(\n      lessThan(zeta, 1),\n      [\n        set(state.position, underDampedPosition),\n        set(state.velocity, underDampedVelocity),\n      ],\n      [\n        set(state.position, criticallyDampedPosition),\n        set(state.velocity, criticallyDampedVelocity),\n      ]\n    ),\n    set(state.time, clock),\n    cond(or(isOvershooting, and(isVelocity, isDisplacement)), [\n      cond(neq(config.stiffness, 0), [\n        set(state.velocity, 0),\n        set(state.position, config.toValue),\n      ]),\n      set(state.finished, 1),\n    ]),\n  ]);\n}\n\nconst procSpring = proc(\n  (\n    finished,\n    velocity,\n    position,\n    time,\n    prevPosition,\n    toValue,\n    damping,\n    mass,\n    stiffness,\n    overshootClamping,\n    restSpeedThreshold,\n    restDisplacementThreshold,\n    clock\n  ) =>\n    spring(\n      clock,\n      {\n        finished,\n        velocity,\n        position,\n        time,\n        // @ts-ignore\n        prevPosition,\n      },\n      {\n        toValue,\n        damping,\n        mass,\n        stiffness,\n        overshootClamping,\n        restDisplacementThreshold,\n        restSpeedThreshold,\n      }\n    )\n);\n\nexport default (\n  clock,\n  {\n    finished,\n    velocity,\n    position,\n    time,\n    // @ts-ignore\n    prevPosition,\n  },\n  {\n    toValue,\n    damping,\n    mass,\n    stiffness,\n    overshootClamping,\n    restDisplacementThreshold,\n    restSpeedThreshold,\n  }\n) =>\n  procSpring(\n    finished,\n    velocity,\n    position,\n    time,\n    prevPosition,\n    toValue,\n    damping,\n    mass,\n    stiffness,\n    overshootClamping,\n    restSpeedThreshold,\n    restDisplacementThreshold,\n    clock\n  );\n"]},"metadata":{},"sourceType":"script"}