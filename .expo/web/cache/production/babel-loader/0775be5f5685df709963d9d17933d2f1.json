{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _get2=_interopRequireDefault(require(\"@babel/runtime/helpers/get\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _AnimatedNode2=_interopRequireDefault(require(\"./AnimatedNode\"));var _val=require(\"../val\");var _ReanimatedModule=_interopRequireDefault(require(\"../ReanimatedModule\"));var _invariant=_interopRequireDefault(require(\"fbjs/lib/invariant\"));function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=(0,_getPrototypeOf2.default)(Derived),result;if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2.default)(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return(0,_possibleConstructorReturn2.default)(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function sanitizeValue(value){return value===null||value===undefined||typeof value==='string'?value:Number(value);}var CONSTANT_VALUES=new Map();function initializeConstantValues(){if(CONSTANT_VALUES.size!==0){return;}[0,-1,1,-2,2].forEach(function(v){return CONSTANT_VALUES.set(v,new InternalAnimatedValue(v,true));});}var InternalAnimatedValue=function(_AnimatedNode){(0,_inherits2.default)(InternalAnimatedValue,_AnimatedNode);var _super=_createSuper(InternalAnimatedValue);(0,_createClass2.default)(InternalAnimatedValue,null,[{key:\"valueForConstant\",value:function valueForConstant(number){initializeConstantValues();return CONSTANT_VALUES.get(number)||new InternalAnimatedValue(number,true);}}]);function InternalAnimatedValue(value){var _this;var constant=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;(0,_classCallCheck2.default)(this,InternalAnimatedValue);(0,_invariant.default)(value!==null,'Animated.Value cannot be set to the null');_this=_super.call(this,{type:'value',value:sanitizeValue(value)});_this._startingValue=_this._value=value;_this._animation=null;_this._constant=constant;return _this;}(0,_createClass2.default)(InternalAnimatedValue,[{key:\"__detach\",value:function __detach(){var _this2=this;if(!this._constant){if(_ReanimatedModule.default.getValue){_ReanimatedModule.default.getValue(this.__nodeID,function(val){return _this2.__nodeConfig.value=val;});}else{this.__nodeConfig.value=this.__getValue();}}this.__detachAnimation(this._animation);(0,_get2.default)((0,_getPrototypeOf2.default)(InternalAnimatedValue.prototype),\"__detach\",this).call(this);}},{key:\"__detachAnimation\",value:function __detachAnimation(animation){animation&&animation.__detach();if(this._animation===animation){this._animation=null;}}},{key:\"__attachAnimation\",value:function __attachAnimation(animation){this.__detachAnimation(this._animation);this._animation=animation;}},{key:\"__onEvaluate\",value:function __onEvaluate(){if(this.__inputNodes&&this.__inputNodes.length){this.__inputNodes.forEach(_val.val);}return this._value;}},{key:\"setValue\",value:function setValue(value){this.__detachAnimation(this._animation);this._updateValue(value);}},{key:\"_updateValue\",value:function _updateValue(value){this._value=value;this.__forceUpdateCache(value);}}]);return InternalAnimatedValue;}(_AnimatedNode2.default);exports.default=InternalAnimatedValue;","map":{"version":3,"sources":["InternalAnimatedValue.js"],"names":["value","Number","CONSTANT_VALUES","v","initializeConstantValues","constructor","constant","invariant","type","sanitizeValue","ReanimatedModule","val","animation"],"mappings":"qsBAAA,qEACA,2BACA,6EACA,qE,mtBAEA,QAAA,CAAA,aAAA,CAAA,KAAA,CAA8B,CAC5B,MAAOA,CAAAA,KAAK,GAALA,IAAAA,EAAkBA,KAAK,GAAvBA,SAAAA,EAAyC,MAAA,CAAA,KAAA,GAAzCA,QAAAA,CAAAA,KAAAA,CAEHC,MAAM,CAFV,KAEU,CAFV,CAGD,CAED,GAAMC,CAAAA,eAAe,CAAG,GAAxB,CAAA,GAAwB,EAAxB,CAEA,QAAA,CAAA,wBAAA,EAAoC,CAClC,GAAIA,eAAe,CAAfA,IAAAA,GAAJ,CAAA,CAAgC,CAC9B,OACD,CACD,CAAA,CAAA,CAAI,CAAJ,CAAA,CAAA,CAAA,CAAW,CAAX,CAAA,CAAA,CAAA,EAAA,OAAA,CAA0BC,SAAAA,CAAC,QACzBD,CAAAA,eAAe,CAAfA,GAAAA,CAAAA,CAAAA,CAAuB,GAAA,CAAA,qBAAA,CAAA,CAAA,CADzB,IACyB,CAAvBA,CADyB,EAA3B,EAGD,C,GAMc,CAAA,qB,kPACb,M,CAAgC,CAC9BE,wBAAwB,GACxB,MACEF,CAAAA,eAAe,CAAfA,GAAAA,CAAAA,MAAAA,GAA+B,GAAA,CAAA,qBAAA,CAAA,MAAA,CADjC,IACiC,CADjC,CAGD,C,IAEDG,+BAAW,KAAXA,CAAqC,cAAlBC,CAAAA,QAAkB,2DAA1B,KAA0B,0DACnCC,uBACEP,KAAK,GADE,IAATO,CAAAA,0CAAAA,EAIA,uBAAM,CAAEC,IAAI,CAAN,OAAA,CAAiBR,KAAK,CAAES,aAAa,CAAA,KAAA,CAArC,CAAN,EACA,MAAA,cAAA,CAAsB,MAAA,MAAA,CAAtB,KAAA,CACA,MAAA,UAAA,CAAA,IAAA,CACA,MAAA,SAAA,CAAA,QAAA,CARmC,aASpC,C,0FAEU,iBACT,GAAI,CAAC,KAAL,SAAA,CAAqB,CACnB,GAAIC,0BAAJ,QAAA,CAA+B,CAC7BA,0BAAAA,QAAAA,CACE,KADFA,QAAAA,CAEEC,SAAAA,GAAG,QAAK,CAAA,MAAA,CAAA,YAAA,CAAA,KAAA,CAFVD,GAEK,EAFLA,EADF,CAAA,IAKO,CACL,KAAA,YAAA,CAAA,KAAA,CAA0B,KAA1B,UAA0B,EAA1B,CACD,CACF,CACD,KAAA,iBAAA,CAAuB,KAAvB,UAAA,EACA,4GACD,C,4DAEgB,S,CAAY,CAC3BE,SAAS,EAAIA,SAAS,CAAtBA,QAAaA,EAAbA,CACA,GAAI,KAAA,UAAA,GAAJ,SAAA,CAAmC,CACjC,KAAA,UAAA,CAAA,IAAA,CACD,CACF,C,4DAEgB,S,CAAY,CAC3B,KAAA,iBAAA,CAAuB,KAAvB,UAAA,EACA,KAAA,UAAA,CAAA,SAAA,CACD,C,mDAEc,CACb,GAAI,KAAA,YAAA,EAAqB,KAAA,YAAA,CAAzB,MAAA,CAAmD,CACjD,KAAA,YAAA,CAAA,OAAA,CAAA,QAAA,EACD,CACD,MAAO,MAAP,MAAA,CAlD4D,C,0CAsDtD,K,CAAQ,CACd,KAAA,iBAAA,CAAuB,KAAvB,UAAA,EACA,KAAA,YAAA,CAAA,KAAA,EACD,C,kDAEW,K,CAAQ,CAClB,KAAA,MAAA,CAAA,KAAA,CACA,KAAA,kBAAA,CAAA,KAAA,EACD,C,mCA9DY,sB","sourcesContent":["import AnimatedNode from './AnimatedNode';\nimport { val } from '../val';\nimport ReanimatedModule from '../ReanimatedModule';\nimport invariant from 'fbjs/lib/invariant';\n\nfunction sanitizeValue(value) {\n  return value === null || value === undefined || typeof value === 'string'\n    ? value\n    : Number(value);\n}\n\nconst CONSTANT_VALUES = new Map();\n\nfunction initializeConstantValues() {\n  if (CONSTANT_VALUES.size !== 0) {\n    return;\n  }\n  [0, -1, 1, -2, 2].forEach(v =>\n    CONSTANT_VALUES.set(v, new InternalAnimatedValue(v, true))\n  );\n}\n\n/**\n * This class has been made internal in order to omit dependencies' cycles which\n * were caused by imperative setValue and interpolate â€“ they are currently exposed with AnimatedValue.js\n */\nexport default class InternalAnimatedValue extends AnimatedNode {\n  static valueForConstant(number) {\n    initializeConstantValues();\n    return (\n      CONSTANT_VALUES.get(number) || new InternalAnimatedValue(number, true)\n    );\n  }\n\n  constructor(value, constant = false) {\n    invariant(\n      value !== null,\n      'Animated.Value cannot be set to the null'\n    );\n    super({ type: 'value', value: sanitizeValue(value) });\n    this._startingValue = this._value = value;\n    this._animation = null;\n    this._constant = constant;\n  }\n\n  __detach() {\n    if (!this._constant) {\n      if (ReanimatedModule.getValue) {\n        ReanimatedModule.getValue(\n          this.__nodeID,\n          val => (this.__nodeConfig.value = val)\n        );\n      } else {\n        this.__nodeConfig.value = this.__getValue();\n      }\n    }\n    this.__detachAnimation(this._animation);\n    super.__detach();\n  }\n\n  __detachAnimation(animation) {\n    animation && animation.__detach();\n    if (this._animation === animation) {\n      this._animation = null;\n    }\n  }\n\n  __attachAnimation(animation) {\n    this.__detachAnimation(this._animation);\n    this._animation = animation;\n  }\n\n  __onEvaluate() {\n    if (this.__inputNodes && this.__inputNodes.length) {\n      this.__inputNodes.forEach(val);\n    }\n    return this._value;\n  }\n\n  // AnimatedValue will override this method to modify the value of a native node.\n  setValue(value) {\n    this.__detachAnimation(this._animation);\n    this._updateValue(value);\n  }\n\n  _updateValue(value) {\n    this._value = value;\n    this.__forceUpdateCache(value);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}