{"ast":null,"code":"var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.createAnimatedParam=createAnimatedParam;exports.AnimatedParam=void 0;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _assertThisInitialized2=_interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _invariant=_interopRequireDefault(require(\"fbjs/lib/invariant\"));var _AnimatedNode2=_interopRequireWildcard(require(\"./AnimatedNode\"));var _AnimatedClock=_interopRequireDefault(require(\"./AnimatedClock\"));var _val=require(\"../val\");function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=(0,_getPrototypeOf2.default)(Derived),result;if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2.default)(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return(0,_possibleConstructorReturn2.default)(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var AnimatedParam=function(_AnimatedNode){(0,_inherits2.default)(AnimatedParam,_AnimatedNode);var _super=_createSuper(AnimatedParam);function AnimatedParam(){var _this;(0,_classCallCheck2.default)(this,AnimatedParam);_this=_super.call(this,{type:'param'},[]);_defineProperty((0,_assertThisInitialized2.default)(_this),\"argsStack\",[]);_defineProperty((0,_assertThisInitialized2.default)(_this),\"_prevCallID\",void 0);_this.__attach();return _this;}(0,_createClass2.default)(AnimatedParam,[{key:\"beginContext\",value:function beginContext(ref,prevCallID){this._prevCallID=prevCallID;this.argsStack.push(ref);}},{key:\"endContext\",value:function endContext(){this.argsStack.pop();}},{key:\"_getTopNode\",value:function _getTopNode(){if(this.argsStack.length===0)throw new Error(\"param: Invocation failed because argsStack is empty\");var top=this.argsStack[this.argsStack.length-1];return top;}},{key:\"setValue\",value:function setValue(value){var top=this._getTopNode();if(top.setValue){var callID=(0,_AnimatedNode2.getCallID)();(0,_AnimatedNode2.setCallID)(this._prevCallID);top.setValue(value);(0,_AnimatedNode2.setCallID)(callID);}else{throw new Error(\"param: setValue(\".concat(value,\") failed because the top element has no known method for updating it's current value.\"));}}},{key:\"__onEvaluate\",value:function __onEvaluate(){var callID=(0,_AnimatedNode2.getCallID)();(0,_AnimatedNode2.setCallID)(this._prevCallID);var top=this._getTopNode();var value=(0,_val.val)(top);(0,_AnimatedNode2.setCallID)(callID);return value;}},{key:\"start\",value:function start(){var node=this._getTopNode();(0,_invariant.default)(node instanceof _AnimatedClock.default||node instanceof AnimatedParam,\"param: top node should be of type AnimatedClock but got \".concat(node));node.start();}},{key:\"stop\",value:function stop(){var node=this._getTopNode();(0,_invariant.default)(node instanceof _AnimatedClock.default||node instanceof AnimatedParam,\"param: top node should be of type AnimatedClock but got \".concat(node));node.stop();}},{key:\"isRunning\",value:function isRunning(){var node=this._getTopNode();if(node instanceof AnimatedParam){return node.isRunning();}(0,_invariant.default)(node instanceof _AnimatedClock.default,\"param: top node should be of type AnimatedClock but got \".concat(node));return node.isStarted();}}]);return AnimatedParam;}(_AnimatedNode2.default);exports.AnimatedParam=AnimatedParam;function createAnimatedParam(){return new AnimatedParam();}","map":{"version":3,"sources":["AnimatedParam.js"],"names":["constructor","type","top","callID","setCallID","value","val","node","invariant"],"mappings":"o3BAAA,qEACA,sEACA,sEACA,2B,44BAEO,CAAA,a,oHAILA,wBAAc,4DACZ,uBAAM,CAAEC,IAAI,CAAE,OAAR,CAAN,CAAA,EAAA,EADY,eAAA,4CAAA,WAAA,CAHF,EAGE,CAAA,CAAA,eAAA,4CAAA,aAAA,CAAA,IAAA,EAAA,CAAA,CAEZ,MAAA,QAAA,GAFY,aAGb,C,yFAEW,G,CAAA,U,CAAkB,CAC5B,KAAA,WAAA,CAAA,UAAA,CACA,KAAA,SAAA,CAAA,IAAA,CAAA,GAAA,EACD,C,+CAEY,CACX,KAAA,SAAA,CAAA,GAAA,GACD,C,iDAEa,CACZ,GAAI,KAAA,SAAA,CAAA,MAAA,GAAJ,CAAA,CAAiC,KAAM,IAAA,CAAA,KAAA,CAAN,qDAAM,CAAN,CACjC,GAAMC,CAAAA,GAAG,CAAG,KAAA,SAAA,CAAe,KAAA,SAAA,CAAA,MAAA,CAA3B,CAAY,CAAZ,CACA,MAAA,CAAA,GAAA,CACD,C,0CAEO,K,CAAQ,CACd,GAAMA,CAAAA,GAAG,CAAG,KAAZ,WAAY,EAAZ,CACA,GAAIA,GAAG,CAAP,QAAA,CAAkB,CAChB,GAAMC,CAAAA,MAAM,CAAZ,8BAAA,CACAC,6BAAU,KAAVA,WAAAA,EACAF,GAAG,CAAHA,QAAAA,CAAAA,KAAAA,EACAE,6BAAAA,MAAAA,EAJF,CAAA,IAKO,CACL,KAAM,IAAA,CAAA,KAAA,CAAA,mBAAA,MAAA,CAAA,KAAA,CAAN,uFAAM,CAAA,CAAN,CACD,CACF,C,mDAEc,CACb,GAAMD,CAAAA,MAAM,CAAZ,8BAAA,CACAC,6BAAU,KAAVA,WAAAA,EACA,GAAMF,CAAAA,GAAG,CAAG,KAAZ,WAAY,EAAZ,CACA,GAAMG,CAAAA,KAAK,CAAGC,aAAd,GAAcA,CAAd,CACAF,6BAAAA,MAAAA,EACA,MAAA,CAAA,KAAA,CACD,C,qCAEO,CACN,GAAMG,CAAAA,IAAI,CAAG,KAAb,WAAa,EAAb,CACAC,uBACED,IAAI,WAAJA,uBAAAA,EAAiCA,IAAI,WAD9B,CAAA,aAATC,CAAS,2DAAA,MAAA,CAATA,IAAS,CAATA,EAIAD,IAAI,CAAJA,KAAAA,GACD,C,mCAEM,CACL,GAAMA,CAAAA,IAAI,CAAG,KAAb,WAAa,EAAb,CACAC,uBACED,IAAI,WAAJA,uBAAAA,EAAiCA,IAAI,WAD9B,CAAA,aAATC,CAAS,2DAAA,MAAA,CAATA,IAAS,CAATA,EAIAD,IAAI,CAAJA,IAAAA,GACD,C,6CAEW,CACV,GAAMA,CAAAA,IAAI,CAAG,KAAb,WAAa,EAAb,CAEA,GAAIA,IAAI,WAAR,CAAA,aAAA,CAAmC,CACjC,MAAOA,CAAAA,IAAI,CAAX,SAAOA,EAAP,CACD,CACDC,uBACED,IAAI,WADG,uBAATC,CAAS,2DAAA,MAAA,CAATA,IAAS,CAATA,EAIA,MAAOD,CAAAA,IAAI,CAAX,SAAOA,EAAP,CACD,C,2BA1EI,sB,sCA6EA,QAAA,CAAA,mBAAA,EAA+B,CACpC,MAAO,IAAP,CAAA,aAAO,EAAP,CACD","sourcesContent":["import invariant from 'fbjs/lib/invariant';\nimport AnimatedNode, { getCallID, setCallID } from './AnimatedNode';\nimport AnimatedClock from './AnimatedClock';\nimport { val } from '../val';\n\nexport class AnimatedParam extends AnimatedNode {\n  argsStack = [];\n  _prevCallID;\n  \n  constructor() {\n    super({ type: 'param' }, []);\n    this.__attach();\n  }\n\n  beginContext(ref, prevCallID) {\n    this._prevCallID = prevCallID;\n    this.argsStack.push(ref);\n  }\n\n  endContext() {\n    this.argsStack.pop();\n  }\n\n  _getTopNode() {\n    if (this.argsStack.length === 0) throw new Error(`param: Invocation failed because argsStack is empty`);\n    const top = this.argsStack[this.argsStack.length - 1];\n    return top;\n  }\n\n  setValue(value) {\n    const top = this._getTopNode();\n    if (top.setValue) {\n      const callID = getCallID();\n      setCallID(this._prevCallID);\n      top.setValue(value);\n      setCallID(callID);\n    } else {\n      throw new Error(`param: setValue(${value}) failed because the top element has no known method for updating it's current value.`)\n    }\n  }\n  \n  __onEvaluate() {\n    const callID = getCallID();\n    setCallID(this._prevCallID);\n    const top = this._getTopNode();\n    const value = val(top);\n    setCallID(callID);\n    return value;\n  }\n\n  start() {\n    const node = this._getTopNode();\n    invariant(\n      node instanceof AnimatedClock || node instanceof AnimatedParam,\n      `param: top node should be of type AnimatedClock but got ${node}`\n    );\n    node.start();\n  }\n\n  stop() {\n    const node = this._getTopNode();\n    invariant(\n      node instanceof AnimatedClock || node instanceof AnimatedParam,\n      `param: top node should be of type AnimatedClock but got ${node}`\n    );\n    node.stop();\n  }\n\n  isRunning() {\n    const node = this._getTopNode();\n\n    if (node instanceof AnimatedParam) {\n      return node.isRunning()\n    }\n    invariant(\n      node instanceof AnimatedClock,\n      `param: top node should be of type AnimatedClock but got ${node}`\n    );\n    return node.isStarted();\n  }\n}\n\nexport function createAnimatedParam() {\n  return new AnimatedParam();\n}\n"]},"metadata":{},"sourceType":"script"}