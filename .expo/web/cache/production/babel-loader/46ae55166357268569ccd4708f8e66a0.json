{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=useCode;var _react=_interopRequireDefault(require(\"react\"));var _base=require(\"../base\");function useCode(nodeFactory,dependencies){if(!(_react.default.useEffect instanceof Function))return;_react.default.useEffect(function(){if(!(nodeFactory instanceof Function)){console.warn('useCode() first argument should be a function that returns an animation node.');var _node=nodeFactory;nodeFactory=function nodeFactory(){return _node;};}var node=nodeFactory();if(node){if(node instanceof Array)node=(0,_base.block)(node);var animatedAlways=(0,_base.always)(node);animatedAlways.__attach();return function(){return animatedAlways.__detach();};}},dependencies);}","map":{"version":3,"sources":["useCode.js"],"names":["React","nodeFactory","console","node","block","animatedAlways","always"],"mappings":"oKAAA,oDACA,6BAae,QAAA,CAAA,OAAA,CAAA,WAAA,CAAA,YAAA,CAA4C,CACzD,GAAI,EAAEA,eAAAA,SAAAA,WAAN,CAAA,QAAI,CAAJ,CAA4C,OAE5CA,eAAAA,SAAAA,CAAgB,UAAM,CAEpB,GAAI,EAAEC,WAAW,WAAjB,CAAA,QAAI,CAAJ,CAAwC,CACtCC,OAAO,CAAPA,IAAAA,CAAAA,+EAAAA,EAIA,GAAMC,CAAAA,KAAI,CAAV,WAAA,CACAF,WAAW,CAAG,6BAAdA,CAAAA,KAAc,EAAdA,CACD,CAED,GAAIE,CAAAA,IAAI,CAAGF,WAAX,EAAA,CACA,GAAA,IAAA,CAAU,CAER,GAAIE,IAAI,WAAR,CAAA,KAAA,CAA2BA,IAAI,CAAGC,gBAAPD,IAAOC,CAAPD,CAE3B,GAAME,CAAAA,cAAc,CAAGC,iBAAvB,IAAuBA,CAAvB,CACAD,cAAc,CALN,QAKRA,GAGA,MAAO,kBAAMA,CAAAA,cAAc,CAA3B,QAAaA,EAAN,EAAP,CACD,CArBHL,CAAAA,CAAAA,YAAAA,EAuBD","sourcesContent":["import React from 'react';\nimport { always, block } from '../base';\n\n/**\n * @callback NodeFactory\n * Function to create a node or an array of nodes.\n * @returns {(Node[] | Node | null | undefined | Boolean)}\n */\n\n/**\n * React hook to run a node.\n * @param {NodeFactory} nodeFactory Function to build the node to run.\n * @param dependencies Array of dependencies. Refresh the node on changes.\n */\nexport default function useCode(nodeFactory, dependencies) {\n  if (!(React.useEffect instanceof Function)) return;\n\n  React.useEffect(() => {\n    // check and correct 1st parameter\n    if (!(nodeFactory instanceof Function)) {\n      console.warn(\n        'useCode() first argument should be a function that returns an animation node.'\n      );\n\n      const node = nodeFactory;\n      nodeFactory = () => node;\n    }\n\n    let node = nodeFactory();\n    if (node) {\n      // allow factory to return array\n      if (node instanceof Array) node = block(node);\n\n      const animatedAlways = always(node);\n      animatedAlways.__attach();\n\n      // return undo function\n      return () => animatedAlways.__detach();\n    }\n  }, dependencies);\n}\n"]},"metadata":{},"sourceType":"script"}